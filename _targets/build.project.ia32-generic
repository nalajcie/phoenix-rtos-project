#
# Shell script for building ia32-generic project
#
# Copyright 2018, 2019 Phoenix Systems
# Author: Kaja Swat, Aleksander Kaminski, Pawel Pisarczyk, Lukasz Kosinski
#

CROSS=i386-pc-phoenix-
CFLAGS="-Os -Wall -Wstrict-prototypes -g -fomit-frame-pointer -fdata-sections -ffunction-sections -fno-builtin"
LDFLAGS="-z max-page-size=0x1000"

export CONSOLE=vga
export BUSYBOX_CONFIG=$(realpath "busybox_config")
export DROPBEAR_CUSTOM_CFLAGS="-DLTC_NO_BSWAP"

#
# Ports configuration
#
export PORTS_BUSYBOX=y
export PORTS_PCRE=y
export PORTS_OPENSSL=y
export PORTS_LIGHTTPD=y
export PORTS_DROPBEAR=y
export PORTS_LUA=n
export PORTS_LZO=y
export PORTS_OPENVPN=y
export PORTS_JANSSON=y
export PORTS_CURL=y


#
# Project specific build
#
b_build_target() {

	b_log "Building sample project for $TARGET"

	mkdir -p "$PREFIX_ROOTFS"/dev "$PREFIX_ROOTFS"/local "$PREFIX_ROOTFS"/data "$PREFIX_ROOTFS"/mnt "$PREFIX_ROOTFS"/var

	# TODO: move to psh install target
	ln -f "$PREFIX_ROOTFS/bin/"{psh,mount}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,bind}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,ps}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,mem}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,perf}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,sync}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,reboot}
	ln -f "$PREFIX_ROOTFS/bin/"{psh,top}

	b_log "Creating CPIO archive"
	pushd "$PREFIX_PROG_STRIPPED" > /dev/null || exit 1
		ls pc-tty pc-ata psh | cpio -H newc -ov > "$PREFIX_BUILD/phoenix-rtos-kernel/programs.cpio" 2>/dev/null
	popd > /dev/null

	# Relink kernel to include newly created cpio archive
	(cd phoenix-rtos-kernel && make $MAKEFLAGS all)

	# FIXME: build plo out of tree and without clean
	b_log "Building plo"
	(cd plo/ia32; make clean all)
}


function b_add2img {
	# Assume sector size = 512 bytes
	sector=$((offs * 2))
	printf "Copying %s (offs=%dKB, sector=0x%x)\n" "$1" "$offs" "$sector"

	sz=$(du -k "$1" | awk '{ print $1 }')
	dd if="$1" of="$2" seek="$offs" bs=1024 >/dev/null 2>&1
	offs=$((offs + sz + 1))
}


b_image_target() {
	b_log "Creating image from $PREFIX_ROOTFS"

	PLO=plo/ia32/plo
	KERNEL=$PREFIX_PROG/phoenix-ia32-generic.elf
	ROOTFS=$PREFIX_BUILD/disk.ext2
	IMG=$PREFIX_BOOT/phoenix-ia32-generic.disk

	# Adding Phoenix-RTOS Loader
	cp "$PLO" "$IMG"
	sz=$(du -k "$PLO" | awk '{ print $1 }')
	echo "Loader size: ${sz}KB"
	echo "Adding padding after plo"
	padsz=$((32 - sz))
	dd if=/dev/zero of="$IMG" seek="$sz" bs=1024 count="$padsz" >/dev/null 2>&1
	offs=32

	# Adding Phoenix-RTOS kernel
	b_add2img "$KERNEL" "$IMG"
	sz=$(du -k "$KERNEL" | awk '{ print $1 }')
	echo "Kernel size: ${sz}KB"
	echo "Adding padding after kernel"
	padsz=$((2048 - sz))
	dd if=/dev/zero of="$IMG" seek="$((32 + sz))" bs=1024 count="$padsz" >/dev/null 2>&1
	offs=2048

	# Adding ext2 rootfs
	sz=$((128 * 1024))
	echo "Filesystem size: ${sz}KB"
	genext2fs -b $sz -i 2048 -d "$PREFIX_ROOTFS" "$ROOTFS"
	b_add2img "$ROOTFS" "$IMG"

#	cp _build/phoenix-ia32-generic.elf $PREFIX_BOOT
}

b_update_pkg() { :; }


export -f b_build_target
